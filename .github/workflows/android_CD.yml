name: Continuous Deployment Android

on:
  push:
    branches: [ development ]
  workflow_dispatch:

env:
  JAVA_VERSION: 8
  APK_FILENAME: Squads

jobs:
  build_release_apk:
    name: Build Release APK
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up JDK 11 & Restore Gradle Cache
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: gradle

      # Build Release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace

      # Sign Release APK
      - name: Sign Release APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY }} # done
          alias: ${{ secrets.SIGNING_ALIAS }} # done
          keyStorePassword: ${{ secrets.PASSWORD }} # done
          keyPassword: ${{ secrets.PASSWORD }} # done

      # Rename Signed APK
      - name: Rename Release APK
        run: mv ${{steps.sign_app.outputs.signedReleaseFile}} ${{ env.APK_FILENAME }}.apk # done

      # Upload Signed APK
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APK_FILENAME }}.apk # done 
          path: ${{ env.APK_FILENAME }}.apk # done


  release_apk:
    name: Release APK
    needs: [build_release_apk]
    runs-on: ubuntu-latest
    steps:
      # Download Signed APK
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.APK_FILENAME }}.apk # done 

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # TODO
        with:
          tag_name: v0.${{ github.run_number }}
          release_name: Release v0.${{ github.run_number }}

      - name: Upload Signed APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # TODO
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APK_FILENAME }}.apk # Done
          asset_name: ${{ env.APK_FILENAME }}.apk # Done
          asset_content_type: application/zip

#       - name: Upload Signed APK to Server
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.SSH_HOST }}
#           username: ${{ secrets.SSH_USERNAME }}
#           port: ${{ secrets.SSH_PORT }}
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           source: "${{ env.APK_FILENAME }}.apk"
#          # target: "./APP/app"

      - name: Upload Signed APK to Google Drive
        uses: willo32/google-drive-upload-action@v1
        with:
          target: ${{ env.APK_FILENAME }}.apk
          credentials: ${{ secrets.GOOGLE_DRIVE_CREDENTIALS }} # TODO
          parent_folder_id: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }} # TODO
          name: ${{ env.APK_FILENAME }}_v0.${{ github.run_number }}.apk  # Done

